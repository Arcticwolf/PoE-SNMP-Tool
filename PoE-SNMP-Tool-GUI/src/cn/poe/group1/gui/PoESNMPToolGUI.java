/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cn.poe.group1.gui;

import cn.poe.group1.entity.Switch;
import java.util.Date;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;

/**
 *
 * @author sauron
 */
public class PoESNMPToolGUI extends javax.swing.JFrame {

    private SwitchTableModel switchTableModel;
    private PortDataTableModel portDataTableModel;    
    private Switch selectedSwitch;
    private MeasurementBackendAdapter db;
    /**
     * Creates new form PoESNMPToolWindow
     */
    public PoESNMPToolGUI() {
        this.db = new MeasurementBackendAdapter();
        this.switchTableModel = new SwitchTableModel();
        this.switchTableModel.addSwitchList( db.retrieveAllSwitches() );        
        this.portDataTableModel = new PortDataTableModel();
        this.selectedSwitch = null;
        initComponents();
        
        this.tblSwitch.getSelectionModel().addListSelectionListener( new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                selectedSwitch = switchTableModel.getRow(tblSwitch.getSelectedRow());
                refreshMeasurement();
            }
        });
    }

    public void refreshMeasurement()
    {
        Date d = new Date();
        this.lblMeasureTime.setText( d.toString() );
        this.portDataTableModel.clear();
        List<PortData> tmp = this.db.retrieveAllPortData(this.selectedSwitch);
        this.portDataTableModel.addPortDataList( tmp );
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pMain = new javax.swing.JPanel();
        pSideBar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSwitch = new javax.swing.JTable();
        pData = new javax.swing.JPanel();
        pSwitchInfo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblMeasureTime = new javax.swing.JLabel();
        pSwitchData = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPorts = new javax.swing.JTable();
        pChart = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnExit = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pMain.setLayout(new java.awt.BorderLayout());

        pSideBar.setPreferredSize(new java.awt.Dimension(300, 468));
        pSideBar.setLayout(new java.awt.BorderLayout());

        tblSwitch.setModel(this.switchTableModel);
        jScrollPane1.setViewportView(tblSwitch);

        pSideBar.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pMain.add(pSideBar, java.awt.BorderLayout.WEST);

        pData.setLayout(new java.awt.BorderLayout());

        pSwitchInfo.setName(""); // NOI18N
        pSwitchInfo.setPreferredSize(new java.awt.Dimension(517, 40));

        jLabel1.setText("Stand:");

        javax.swing.GroupLayout pSwitchInfoLayout = new javax.swing.GroupLayout(pSwitchInfo);
        pSwitchInfo.setLayout(pSwitchInfoLayout);
        pSwitchInfoLayout.setHorizontalGroup(
            pSwitchInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSwitchInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lblMeasureTime, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );
        pSwitchInfoLayout.setVerticalGroup(
            pSwitchInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pSwitchInfoLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(pSwitchInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblMeasureTime))
                .addContainerGap())
        );

        pData.add(pSwitchInfo, java.awt.BorderLayout.NORTH);

        pSwitchData.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setPreferredSize(new java.awt.Dimension(453, 300));

        tblPorts.setModel(this.portDataTableModel);
        jScrollPane2.setViewportView(tblPorts);

        pSwitchData.add(jScrollPane2, java.awt.BorderLayout.NORTH);

        javax.swing.GroupLayout pChartLayout = new javax.swing.GroupLayout(pChart);
        pChart.setLayout(pChartLayout);
        pChartLayout.setHorizontalGroup(
            pChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 517, Short.MAX_VALUE)
        );
        pChartLayout.setVerticalGroup(
            pChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 175, Short.MAX_VALUE)
        );

        pSwitchData.add(pChart, java.awt.BorderLayout.CENTER);

        pData.add(pSwitchData, java.awt.BorderLayout.CENTER);

        pMain.add(pData, java.awt.BorderLayout.CENTER);

        getContentPane().add(pMain, java.awt.BorderLayout.CENTER);

        jToolBar1.setRollover(true);
        jToolBar1.setMaximumSize(new java.awt.Dimension(18, 25));
        jToolBar1.setMinimumSize(new java.awt.Dimension(18, 25));

        btnExit.setText("Exit");
        btnExit.setFocusable(false);
        btnExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExit);

        btnRefresh.setText("Refresh");
        btnRefresh.setFocusable(false);
        btnRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRefresh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        jToolBar1.add(btnRefresh);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        this.refreshMeasurement();
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PoESNMPToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PoESNMPToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PoESNMPToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PoESNMPToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PoESNMPToolGUI().setVisible(true);
            }
        });
    }
    
    /*private void updateChart()
    {
        
    }
    
    private JFreeChart createChart()
    {
        JFreeChart chart = ChartFactory.createXYLineChart("PortData", "time", "mw", dataset, PlotOrientation.VERTICAL, false, true, false);
        XYPlot plot = (XYPlot) chart.getPlot();
        plot.setDomainPannable(true);
        plot.setRangePannable(true);
        plot.setRangeGridlinesVisible(false);
        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        return chart;
        
    }*/
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblMeasureTime;
    private javax.swing.JPanel pChart;
    private javax.swing.JPanel pData;
    private javax.swing.JPanel pMain;
    private javax.swing.JPanel pSideBar;
    private javax.swing.JPanel pSwitchData;
    private javax.swing.JPanel pSwitchInfo;
    private javax.swing.JTable tblPorts;
    private javax.swing.JTable tblSwitch;
    // End of variables declaration//GEN-END:variables
}
